
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Apr 30 19:19:27 CEST 2018
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import org.apache.log4j.*;

/** CUP v0.10k generated parser.
  * @version Mon Apr 30 19:19:27 CEST 2018
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\161\000\002\003\010\000\002\002\004\000\002\004" +
    "\004\000\002\004\002\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\007\006\000\002\013\007\000" +
    "\002\013\005\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\010\005\000\002\055\002\000\002\010" +
    "\006\000\002\015\005\000\002\015\003\000\002\056\002" +
    "\000\002\015\006\000\002\016\003\000\002\016\005\000" +
    "\002\012\003\000\002\011\011\000\002\011\014\000\002" +
    "\011\012\000\002\011\007\000\002\017\004\000\002\017" +
    "\002\000\002\005\004\000\002\005\002\000\002\020\011" +
    "\000\002\020\012\000\002\021\003\000\002\021\003\000" +
    "\002\023\005\000\002\057\002\000\002\023\006\000\002" +
    "\024\005\000\002\024\003\000\002\060\002\000\002\024" +
    "\006\000\002\025\004\000\002\025\006\000\002\022\004" +
    "\000\002\022\002\000\002\027\006\000\002\027\006\000" +
    "\002\027\006\000\002\027\007\000\002\027\005\000\002" +
    "\027\005\000\002\040\003\000\002\041\005\000\002\041" +
    "\003\000\002\026\003\000\002\026\003\000\002\053\005" +
    "\000\002\053\007\000\002\052\003\000\002\052\004\000" +
    "\002\052\004\000\002\052\005\000\002\052\004\000\002" +
    "\052\005\000\002\052\011\000\002\052\007\000\002\052" +
    "\011\000\002\052\007\000\002\052\007\000\002\054\005" +
    "\000\002\061\002\000\002\054\006\000\002\042\003\000" +
    "\002\043\005\000\002\043\003\000\002\045\003\000\002" +
    "\044\005\000\002\044\003\000\002\046\005\000\002\046" +
    "\003\000\002\047\003\000\002\047\003\000\002\047\003" +
    "\000\002\047\003\000\002\047\003\000\002\047\003\000" +
    "\002\031\005\000\002\031\004\000\002\033\005\000\002" +
    "\033\002\000\002\032\004\000\002\036\005\000\002\036" +
    "\002\000\002\035\003\000\002\035\003\000\002\035\005" +
    "\000\002\035\003\000\002\035\007\000\002\035\004\000" +
    "\002\035\006\000\002\035\005\000\002\035\003\000\002" +
    "\030\004\000\002\050\004\000\002\050\002\000\002\051" +
    "\004\000\002\051\005\000\002\034\003\000\002\034\003" +
    "\000\002\037\003\000\002\037\003\000\002\037\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\333\000\004\004\005\001\002\000\004\002\335\001" +
    "\002\000\004\005\006\001\002\000\012\005\ufffe\006\ufffe" +
    "\010\ufffe\021\ufffe\001\002\000\012\005\013\006\012\010" +
    "\020\021\017\001\002\000\006\003\317\005\320\001\002" +
    "\000\012\005\uffff\006\uffff\010\uffff\021\uffff\001\002\000" +
    "\010\005\uffe3\007\uffe3\025\uffe3\001\002\000\054\003\uffeb" +
    "\005\uffeb\006\uffeb\011\uffeb\012\uffeb\017\uffeb\020\uffeb\024" +
    "\uffeb\032\uffeb\033\uffeb\034\uffeb\035\uffeb\036\uffeb\043\uffeb" +
    "\044\uffeb\045\uffeb\046\uffeb\047\uffeb\050\uffeb\054\uffeb\055" +
    "\uffeb\001\002\000\012\005\ufffb\006\ufffb\010\ufffb\021\ufffb" +
    "\001\002\000\012\005\ufffc\006\ufffc\010\ufffc\021\ufffc\001" +
    "\002\000\012\005\ufffd\006\ufffd\010\ufffd\021\ufffd\001\002" +
    "\000\004\005\036\001\002\000\004\005\013\001\002\000" +
    "\004\005\022\001\002\000\004\013\034\001\002\000\006" +
    "\011\025\012\024\001\002\000\004\005\026\001\002\000" +
    "\012\005\ufffa\006\ufffa\010\ufffa\021\ufffa\001\002\000\004" +
    "\013\027\001\002\000\010\014\032\015\033\016\031\001" +
    "\002\000\006\011\ufff9\012\ufff9\001\002\000\006\011\ufff5" +
    "\012\ufff5\001\002\000\006\011\ufff7\012\ufff7\001\002\000" +
    "\006\011\ufff6\012\ufff6\001\002\000\010\014\032\015\033" +
    "\016\031\001\002\000\006\011\ufff8\012\ufff8\001\002\000" +
    "\006\006\037\022\040\001\002\000\010\005\uffe5\006\uffe5" +
    "\007\uffe5\001\002\000\004\005\013\001\002\000\004\006" +
    "\042\001\002\000\010\005\uffe5\006\uffe5\007\uffe5\001\002" +
    "\000\010\005\013\006\044\007\046\001\002\000\010\005" +
    "\uffe3\007\uffe3\025\uffe3\001\002\000\010\005\uffe6\006\uffe6" +
    "\007\uffe6\001\002\000\012\005\uffea\006\uffea\010\uffea\021" +
    "\uffea\001\002\000\010\005\013\007\051\025\053\001\002" +
    "\000\004\005\uffe0\001\002\000\004\007\306\001\002\000" +
    "\010\005\uffe4\007\uffe4\025\uffe4\001\002\000\004\005\uffdf" +
    "\001\002\000\004\005\055\001\002\000\004\023\057\001" +
    "\002\000\006\005\uffe5\006\uffe5\001\002\000\010\003\062" +
    "\005\013\024\060\001\002\000\006\005\uffe5\006\uffe5\001" +
    "\002\000\004\005\075\001\002\000\006\012\uffd9\024\uffdd" +
    "\001\002\000\006\012\065\024\066\001\002\000\006\012" +
    "\uffda\024\uffda\001\002\000\004\005\013\001\002\000\006" +
    "\005\uffde\006\uffde\001\002\000\006\012\uffdb\024\uffdb\001" +
    "\002\000\004\012\073\001\002\000\004\024\072\001\002" +
    "\000\006\005\uffdc\006\uffdc\001\002\000\004\005\013\001" +
    "\002\000\006\012\uffd8\024\uffd8\001\002\000\010\012\uffd7" +
    "\017\076\024\uffd7\001\002\000\004\020\077\001\002\000" +
    "\006\012\uffd6\024\uffd6\001\002\000\006\005\013\006\101" +
    "\001\002\000\026\005\uffd4\006\uffd4\007\uffd4\030\uffd4\031" +
    "\uffd4\040\uffd4\041\uffd4\042\uffd4\052\uffd4\056\uffd4\001\002" +
    "\000\026\005\105\006\104\007\117\030\103\031\113\040" +
    "\121\041\115\042\116\052\120\056\110\001\002\000\004" +
    "\023\276\001\002\000\026\005\uffd4\006\uffd4\007\uffd4\030" +
    "\uffd4\031\uffd4\040\uffd4\041\uffd4\042\uffd4\052\uffd4\056\uffd4" +
    "\001\002\000\060\011\uff98\012\uff98\013\uff98\017\uff98\020" +
    "\uff98\023\uff98\024\uff98\026\uff98\027\uff98\032\uff98\033\uff98" +
    "\034\uff98\035\uff98\036\uff98\043\uff98\044\uff98\045\uff98\046" +
    "\uff98\047\uff98\050\uff98\051\uff98\054\uff98\055\uff98\001\002" +
    "\000\030\005\uffc9\006\uffc9\007\uffc9\030\uffc9\031\uffc9\040" +
    "\uffc9\041\uffc9\042\uffc9\052\uffc9\053\uffc9\056\uffc9\001\002" +
    "\000\012\013\251\023\250\026\246\027\247\001\002\000" +
    "\004\023\233\001\002\000\032\005\uffc6\006\uffc6\007\uffc6" +
    "\030\uffc6\031\uffc6\040\uffc6\041\uffc6\042\uffc6\052\uffc6\053" +
    "\uffc6\056\uffc6\057\uffc6\001\002\000\026\005\uffd5\006\uffd5" +
    "\007\uffd5\030\uffd5\031\uffd5\040\uffd5\041\uffd5\042\uffd5\052" +
    "\uffd5\056\uffd5\001\002\000\004\023\222\001\002\000\030" +
    "\005\uffca\006\uffca\007\uffca\030\uffca\031\uffca\040\uffca\041" +
    "\uffca\042\uffca\052\uffca\053\uffca\056\uffca\001\002\000\004" +
    "\011\221\001\002\000\022\005\105\011\217\014\133\015" +
    "\141\016\136\023\143\032\126\037\131\001\002\000\010" +
    "\005\uffe1\007\uffe1\025\uffe1\001\002\000\024\005\105\006" +
    "\104\030\103\031\113\040\121\041\115\042\116\052\120" +
    "\056\110\001\002\000\004\011\122\001\002\000\032\005" +
    "\uffc5\006\uffc5\007\uffc5\030\uffc5\031\uffc5\040\uffc5\041\uffc5" +
    "\042\uffc5\052\uffc5\053\uffc5\056\uffc5\057\uffc5\001\002\000" +
    "\004\053\124\001\002\000\004\023\125\001\002\000\020" +
    "\005\105\014\133\015\141\016\136\023\143\032\126\037" +
    "\131\001\002\000\016\005\105\014\133\015\141\016\136" +
    "\023\143\037\131\001\002\000\010\024\uffb5\054\212\055" +
    "\uffb5\001\002\000\024\024\uffb1\043\205\044\202\045\203" +
    "\046\204\047\206\050\207\054\uffb1\055\uffb1\001\002\000" +
    "\004\005\013\001\002\000\046\011\uff9b\012\uff9b\020\uff9b" +
    "\023\166\024\uff9b\032\uff9b\033\uff9b\034\uff9b\035\uff9b\036" +
    "\uff9b\043\uff9b\044\uff9b\045\uff9b\046\uff9b\047\uff9b\050\uff9b" +
    "\054\uff9b\055\uff9b\001\002\000\044\011\uffa3\012\uffa3\020" +
    "\uffa3\024\uffa3\032\uffa3\033\uffa3\034\uffa3\035\uffa3\036\uffa3" +
    "\043\uffa3\044\uffa3\045\uffa3\046\uffa3\047\uffa3\050\uffa3\054" +
    "\uffa3\055\uffa3\001\002\000\004\024\164\001\002\000\010" +
    "\024\uffb3\054\uffb3\055\uffb3\001\002\000\044\011\uffa0\012" +
    "\uffa0\020\uffa0\024\uffa0\032\uffa0\033\uffa0\034\uffa0\035\uffa0" +
    "\036\uffa0\043\uffa0\044\uffa0\045\uffa0\046\uffa0\047\uffa0\050" +
    "\uffa0\054\uffa0\055\uffa0\001\002\000\036\011\uffa7\012\uffa7" +
    "\020\uffa7\024\uffa7\032\uffa7\033\uffa7\043\uffa7\044\uffa7\045" +
    "\uffa7\046\uffa7\047\uffa7\050\uffa7\054\uffa7\055\uffa7\001\002" +
    "\000\044\011\uffa4\012\uffa4\020\uffa4\024\uffa4\032\uffa4\033" +
    "\uffa4\034\uffa4\035\uffa4\036\uffa4\043\uffa4\044\uffa4\045\uffa4" +
    "\046\uffa4\047\uffa4\050\uffa4\054\uffa4\055\uffa4\001\002\000" +
    "\044\011\uffa2\012\uffa2\020\uffa2\024\uffa2\032\uffa2\033\uffa2" +
    "\034\uffa2\035\uffa2\036\uffa2\043\uffa2\044\uffa2\045\uffa2\046" +
    "\uffa2\047\uffa2\050\uffa2\054\uffa2\055\uffa2\001\002\000\006" +
    "\024\uffb6\055\uffb6\001\002\000\020\005\105\014\133\015" +
    "\141\016\136\023\143\032\126\037\131\001\002\000\006" +
    "\024\uffb8\055\145\001\002\000\020\005\105\014\133\015" +
    "\141\016\136\023\143\032\126\037\131\001\002\000\006" +
    "\024\uffb7\055\uffb7\001\002\000\004\024\150\001\002\000" +
    "\044\011\uffa1\012\uffa1\020\uffa1\024\uffa1\032\uffa1\033\uffa1" +
    "\034\uffa1\035\uffa1\036\uffa1\043\uffa1\044\uffa1\045\uffa1\046" +
    "\uffa1\047\uffa1\050\uffa1\054\uffa1\055\uffa1\001\002\000\044" +
    "\011\uffa6\012\uffa6\020\uffa6\024\uffa6\032\uffa6\033\uffa6\034" +
    "\153\035\154\036\152\043\uffa6\044\uffa6\045\uffa6\046\uffa6" +
    "\047\uffa6\050\uffa6\054\uffa6\055\uffa6\001\002\000\016\005" +
    "\uff91\014\uff91\015\uff91\016\uff91\023\uff91\037\uff91\001\002" +
    "\000\016\005\uff93\014\uff93\015\uff93\016\uff93\023\uff93\037" +
    "\uff93\001\002\000\016\005\uff92\014\uff92\015\uff92\016\uff92" +
    "\023\uff92\037\uff92\001\002\000\016\005\105\014\133\015" +
    "\141\016\136\023\143\037\131\001\002\000\044\011\uffa5" +
    "\012\uffa5\020\uffa5\024\uffa5\032\uffa5\033\uffa5\034\uffa5\035" +
    "\uffa5\036\uffa5\043\uffa5\044\uffa5\045\uffa5\046\uffa5\047\uffa5" +
    "\050\uffa5\054\uffa5\055\uffa5\001\002\000\036\011\uffa9\012" +
    "\uffa9\020\uffa9\024\uffa9\032\161\033\160\043\uffa9\044\uffa9" +
    "\045\uffa9\046\uffa9\047\uffa9\050\uffa9\054\uffa9\055\uffa9\001" +
    "\002\000\016\005\uff95\014\uff95\015\uff95\016\uff95\023\uff95" +
    "\037\uff95\001\002\000\016\005\uff94\014\uff94\015\uff94\016" +
    "\uff94\023\uff94\037\uff94\001\002\000\016\005\105\014\133" +
    "\015\141\016\136\023\143\037\131\001\002\000\036\011" +
    "\uffa8\012\uffa8\020\uffa8\024\uffa8\032\uffa8\033\uffa8\043\uffa8" +
    "\044\uffa8\045\uffa8\046\uffa8\047\uffa8\050\uffa8\054\uffa8\055" +
    "\uffa8\001\002\000\004\011\165\001\002\000\032\005\uffc0" +
    "\006\uffc0\007\uffc0\030\uffc0\031\uffc0\040\uffc0\041\uffc0\042" +
    "\uffc0\052\uffc0\053\uffc0\056\uffc0\057\uffc0\001\002\000\022" +
    "\005\105\014\133\015\141\016\136\023\143\024\172\032" +
    "\126\037\131\001\002\000\006\012\uffcb\024\uffcb\001\002" +
    "\000\004\024\175\001\002\000\006\012\173\024\uffcd\001" +
    "\002\000\044\011\uff9c\012\uff9c\020\uff9c\024\uff9c\032\uff9c" +
    "\033\uff9c\034\uff9c\035\uff9c\036\uff9c\043\uff9c\044\uff9c\045" +
    "\uff9c\046\uff9c\047\uff9c\050\uff9c\054\uff9c\055\uff9c\001\002" +
    "\000\020\005\105\014\133\015\141\016\136\023\143\032" +
    "\126\037\131\001\002\000\006\012\uffcc\024\uffcc\001\002" +
    "\000\044\011\uff9d\012\uff9d\020\uff9d\024\uff9d\032\uff9d\033" +
    "\uff9d\034\uff9d\035\uff9d\036\uff9d\043\uff9d\044\uff9d\045\uff9d" +
    "\046\uff9d\047\uff9d\050\uff9d\054\uff9d\055\uff9d\001\002\000" +
    "\046\011\uff9e\012\uff9e\017\177\020\uff9e\024\uff9e\032\uff9e" +
    "\033\uff9e\034\uff9e\035\uff9e\036\uff9e\043\uff9e\044\uff9e\045" +
    "\uff9e\046\uff9e\047\uff9e\050\uff9e\054\uff9e\055\uff9e\001\002" +
    "\000\020\005\105\014\133\015\141\016\136\023\143\032" +
    "\126\037\131\001\002\000\004\020\201\001\002\000\044" +
    "\011\uff9f\012\uff9f\020\uff9f\024\uff9f\032\uff9f\033\uff9f\034" +
    "\uff9f\035\uff9f\036\uff9f\043\uff9f\044\uff9f\045\uff9f\046\uff9f" +
    "\047\uff9f\050\uff9f\054\uff9f\055\uff9f\001\002\000\020\005" +
    "\uffaf\014\uffaf\015\uffaf\016\uffaf\023\uffaf\032\uffaf\037\uffaf" +
    "\001\002\000\020\005\uffae\014\uffae\015\uffae\016\uffae\023" +
    "\uffae\032\uffae\037\uffae\001\002\000\020\005\uffad\014\uffad" +
    "\015\uffad\016\uffad\023\uffad\032\uffad\037\uffad\001\002\000" +
    "\020\005\uffb0\014\uffb0\015\uffb0\016\uffb0\023\uffb0\032\uffb0" +
    "\037\uffb0\001\002\000\020\005\uffac\014\uffac\015\uffac\016" +
    "\uffac\023\uffac\032\uffac\037\uffac\001\002\000\020\005\uffab" +
    "\014\uffab\015\uffab\016\uffab\023\uffab\032\uffab\037\uffab\001" +
    "\002\000\020\005\105\014\133\015\141\016\136\023\143" +
    "\032\126\037\131\001\002\000\010\024\uffb2\054\uffb2\055" +
    "\uffb2\001\002\000\020\005\105\014\133\015\141\016\136" +
    "\023\143\032\126\037\131\001\002\000\010\024\uffb4\054" +
    "\uffb4\055\uffb4\001\002\000\036\011\uffa7\012\uffa7\020\uffa7" +
    "\024\uffa7\032\uffa7\033\uffa7\043\uffa7\044\uffa7\045\uffa7\046" +
    "\uffa7\047\uffa7\050\uffa7\054\uffa7\055\uffa7\001\002\000\036" +
    "\011\uffaa\012\uffaa\020\uffaa\024\uffaa\032\161\033\160\043" +
    "\uffaa\044\uffaa\045\uffaa\046\uffaa\047\uffaa\050\uffaa\054\uffaa" +
    "\055\uffaa\001\002\000\004\011\220\001\002\000\032\005" +
    "\uffc2\006\uffc2\007\uffc2\030\uffc2\031\uffc2\040\uffc2\041\uffc2" +
    "\042\uffc2\052\uffc2\053\uffc2\056\uffc2\057\uffc2\001\002\000" +
    "\032\005\uffc3\006\uffc3\007\uffc3\030\uffc3\031\uffc3\040\uffc3" +
    "\041\uffc3\042\uffc3\052\uffc3\053\uffc3\056\uffc3\057\uffc3\001" +
    "\002\000\032\005\uffc4\006\uffc4\007\uffc4\030\uffc4\031\uffc4" +
    "\040\uffc4\041\uffc4\042\uffc4\052\uffc4\053\uffc4\056\uffc4\057" +
    "\uffc4\001\002\000\020\005\105\014\133\015\141\016\136" +
    "\023\143\032\126\037\131\001\002\000\006\012\224\024" +
    "\225\001\002\000\004\014\227\001\002\000\004\011\226" +
    "\001\002\000\032\005\uffbd\006\uffbd\007\uffbd\030\uffbd\031" +
    "\uffbd\040\uffbd\041\uffbd\042\uffbd\052\uffbd\053\uffbd\056\uffbd" +
    "\057\uffbd\001\002\000\004\024\230\001\002\000\004\011" +
    "\231\001\002\000\032\005\uffbe\006\uffbe\007\uffbe\030\uffbe" +
    "\031\uffbe\040\uffbe\041\uffbe\042\uffbe\052\uffbe\053\uffbe\056" +
    "\uffbe\057\uffbe\001\002\000\024\005\105\006\104\030\103" +
    "\031\113\040\121\041\115\042\116\052\120\056\110\001" +
    "\002\000\022\003\235\005\105\014\133\015\141\016\136" +
    "\023\143\032\126\037\131\001\002\000\004\024\240\001" +
    "\002\000\004\024\uffba\001\002\000\004\024\237\001\002" +
    "\000\024\005\uffb9\006\uffb9\030\uffb9\031\uffb9\040\uffb9\041" +
    "\uffb9\042\uffb9\052\uffb9\056\uffb9\001\002\000\024\005\uffbb" +
    "\006\uffbb\030\uffbb\031\uffbb\040\uffbb\041\uffbb\042\uffbb\052" +
    "\uffbb\056\uffbb\001\002\000\030\005\uffc8\006\uffc8\007\uffc8" +
    "\030\uffc8\031\uffc8\040\uffc8\041\uffc8\042\uffc8\052\uffc8\053" +
    "\uffc8\056\uffc8\001\002\000\032\005\uffca\006\uffca\007\uffca" +
    "\030\uffca\031\uffca\040\uffca\041\uffca\042\uffca\052\uffca\053" +
    "\uffca\056\uffca\057\243\001\002\000\024\005\105\006\104" +
    "\030\103\031\113\040\121\041\115\042\116\052\120\056" +
    "\110\001\002\000\030\005\uffc7\006\uffc7\007\uffc7\030\uffc7" +
    "\031\uffc7\040\uffc7\041\uffc7\042\uffc7\052\uffc7\053\uffc7\056" +
    "\uffc7\001\002\000\032\005\uffbc\006\uffbc\007\uffbc\030\uffbc" +
    "\031\uffbc\040\uffbc\041\uffbc\042\uffbc\052\uffbc\053\uffbc\056" +
    "\uffbc\057\uffbc\001\002\000\004\011\264\001\002\000\004" +
    "\011\263\001\002\000\022\005\105\014\133\015\141\016" +
    "\136\023\143\024\257\032\126\037\131\001\002\000\022" +
    "\003\253\005\105\014\133\015\141\016\136\023\143\032" +
    "\126\037\131\001\002\000\004\011\255\001\002\000\004" +
    "\011\254\001\002\000\032\005\uffd2\006\uffd2\007\uffd2\030" +
    "\uffd2\031\uffd2\040\uffd2\041\uffd2\042\uffd2\052\uffd2\053\uffd2" +
    "\056\uffd2\057\uffd2\001\002\000\032\005\uffd3\006\uffd3\007" +
    "\uffd3\030\uffd3\031\uffd3\040\uffd3\041\uffd3\042\uffd3\052\uffd3" +
    "\053\uffd3\056\uffd3\057\uffd3\001\002\000\004\024\261\001" +
    "\002\000\004\011\260\001\002\000\032\005\uffd1\006\uffd1" +
    "\007\uffd1\030\uffd1\031\uffd1\040\uffd1\041\uffd1\042\uffd1\052" +
    "\uffd1\053\uffd1\056\uffd1\057\uffd1\001\002\000\004\011\262" +
    "\001\002\000\032\005\uffd0\006\uffd0\007\uffd0\030\uffd0\031" +
    "\uffd0\040\uffd0\041\uffd0\042\uffd0\052\uffd0\053\uffd0\056\uffd0" +
    "\057\uffd0\001\002\000\032\005\uffce\006\uffce\007\uffce\030" +
    "\uffce\031\uffce\040\uffce\041\uffce\042\uffce\052\uffce\053\uffce" +
    "\056\uffce\057\uffce\001\002\000\032\005\uffcf\006\uffcf\007" +
    "\uffcf\030\uffcf\031\uffcf\040\uffcf\041\uffcf\042\uffcf\052\uffcf" +
    "\053\uffcf\056\uffcf\057\uffcf\001\002\000\060\011\uff9a\012" +
    "\uff9a\013\uff9a\017\267\020\uff9a\023\uff9a\024\uff9a\026\uff9a" +
    "\027\uff9a\032\uff9a\033\uff9a\034\uff9a\035\uff9a\036\uff9a\043" +
    "\uff9a\044\uff9a\045\uff9a\046\uff9a\047\uff9a\050\uff9a\051\270" +
    "\054\uff9a\055\uff9a\001\002\000\060\011\uff99\012\uff99\013" +
    "\uff99\017\uff99\020\uff99\023\uff99\024\uff99\026\uff99\027\uff99" +
    "\032\uff99\033\uff99\034\uff99\035\uff99\036\uff99\043\uff99\044" +
    "\uff99\045\uff99\046\uff99\047\uff99\050\uff99\051\uff99\054\uff99" +
    "\055\uff99\001\002\000\020\005\105\014\133\015\141\016" +
    "\136\023\143\032\126\037\131\001\002\000\004\005\271" +
    "\001\002\000\060\011\uff97\012\uff97\013\uff97\017\uff97\020" +
    "\uff97\023\uff97\024\uff97\026\uff97\027\uff97\032\uff97\033\uff97" +
    "\034\uff97\035\uff97\036\uff97\043\uff97\044\uff97\045\uff97\046" +
    "\uff97\047\uff97\050\uff97\051\uff97\054\uff97\055\uff97\001\002" +
    "\000\004\020\273\001\002\000\060\011\uff96\012\uff96\013" +
    "\uff96\017\uff96\020\uff96\023\uff96\024\uff96\026\uff96\027\uff96" +
    "\032\uff96\033\uff96\034\uff96\035\uff96\036\uff96\043\uff96\044" +
    "\uff96\045\uff96\046\uff96\047\uff96\050\uff96\051\uff96\054\uff96" +
    "\055\uff96\001\002\000\026\005\105\006\104\007\275\030" +
    "\103\031\113\040\121\041\115\042\116\052\120\056\110" +
    "\001\002\000\032\005\uffc1\006\uffc1\007\uffc1\030\uffc1\031" +
    "\uffc1\040\uffc1\041\uffc1\042\uffc1\052\uffc1\053\uffc1\056\uffc1" +
    "\057\uffc1\001\002\000\004\005\105\001\002\000\004\024" +
    "\300\001\002\000\004\011\301\001\002\000\032\005\uffbf" +
    "\006\uffbf\007\uffbf\030\uffbf\031\uffbf\040\uffbf\041\uffbf\042" +
    "\uffbf\052\uffbf\053\uffbf\056\uffbf\057\uffbf\001\002\000\006" +
    "\005\013\006\303\001\002\000\026\005\uffd4\006\uffd4\007" +
    "\uffd4\030\uffd4\031\uffd4\040\uffd4\041\uffd4\042\uffd4\052\uffd4" +
    "\056\uffd4\001\002\000\026\005\105\006\104\007\305\030" +
    "\103\031\113\040\121\041\115\042\116\052\120\056\110" +
    "\001\002\000\010\005\uffe2\007\uffe2\025\uffe2\001\002\000" +
    "\012\005\uffe9\006\uffe9\010\uffe9\021\uffe9\001\002\000\010" +
    "\005\013\006\310\007\311\001\002\000\010\005\uffe3\007" +
    "\uffe3\025\uffe3\001\002\000\012\005\uffe7\006\uffe7\010\uffe7" +
    "\021\uffe7\001\002\000\010\005\013\007\313\025\053\001" +
    "\002\000\004\007\314\001\002\000\012\005\uffe8\006\uffe8" +
    "\010\uffe8\021\uffe8\001\002\000\010\005\013\007\316\025" +
    "\053\001\002\000\004\002\001\001\002\000\006\011\ufff3" +
    "\012\uffef\001\002\000\010\011\uffed\012\uffed\017\326\001" +
    "\002\000\006\011\ufff0\012\ufff0\001\002\000\006\011\324" +
    "\012\323\001\002\000\004\005\320\001\002\000\014\005" +
    "\ufff4\006\ufff4\007\ufff4\010\ufff4\021\ufff4\001\002\000\006" +
    "\011\ufff1\012\ufff1\001\002\000\004\020\327\001\002\000" +
    "\006\011\uffec\012\uffec\001\002\000\004\012\333\001\002" +
    "\000\004\011\332\001\002\000\014\005\ufff2\006\ufff2\007" +
    "\ufff2\010\ufff2\021\ufff2\001\002\000\004\005\320\001\002" +
    "\000\006\011\uffee\012\uffee\001\002\000\004\002\000\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\333\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\006\001\001\000\014\006\010" +
    "\007\015\010\014\011\013\012\007\001\001\000\006\015" +
    "\321\016\320\001\001\000\002\001\001\000\004\005\314" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\012\020" +
    "\001\001\000\004\013\022\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\014\027\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\034\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\017\306\001\001\000\004\012\040\001\001\000\002" +
    "\001\001\000\004\017\042\001\001\000\006\010\044\012" +
    "\007\001\001\000\004\005\046\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\012\047\020\051\021\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\055\001" +
    "\001\000\004\017\301\001\001\000\010\012\060\024\062" +
    "\025\063\001\001\000\004\017\077\001\001\000\002\001" +
    "\001\000\006\057\070\060\067\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\012\060\025\066\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\012\060\025\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\010\044\012\007\001\001\000" +
    "\004\022\101\001\001\000\014\026\111\027\110\030\106" +
    "\052\113\053\105\001\001\000\002\001\001\000\004\022" +
    "\273\001\001\000\004\050\264\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\054\231\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\030\131\031\215\032\136\035" +
    "\137\001\001\000\002\001\001\000\014\026\122\027\110" +
    "\030\106\052\113\053\105\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\030\131\031\127\032\136\035\137\042\133\043\143\044" +
    "\126\045\141\046\134\001\001\000\010\030\131\032\213" +
    "\035\137\001\001\000\002\001\001\000\004\047\207\001" +
    "\001\000\004\012\175\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\156\001\001\000\004\036\150\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\030\131\031" +
    "\146\032\136\035\137\001\001\000\002\001\001\000\020" +
    "\030\131\031\127\032\136\035\137\044\126\045\145\046" +
    "\134\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\037\154\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\030\131\035\155" +
    "\001\001\000\002\001\001\000\004\034\161\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\030\131\032\162" +
    "\035\137\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\030\131\031\166\032\136\035\137" +
    "\040\167\041\170\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\030\131" +
    "\031\173\032\136\035\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\030\131\031\177" +
    "\032\136\035\137\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\030\131\031\210\032\136\035\137\001\001\000\002" +
    "\001\001\000\014\030\131\031\127\032\136\035\137\046" +
    "\212\001\001\000\002\001\001\000\004\033\214\001\001" +
    "\000\004\034\161\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\030\131" +
    "\031\222\032\136\035\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\026" +
    "\240\027\110\030\106\052\241\053\105\001\001\000\024" +
    "\030\131\031\127\032\136\035\137\042\233\043\143\044" +
    "\126\045\141\046\134\001\001\000\002\001\001\000\004" +
    "\061\235\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\027\110\030\106\052\244\053\243\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\030\131\031\166\032\136\035\137\040\255\041" +
    "\170\001\001\000\012\030\131\031\251\032\136\035\137" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\051\265\001\001" +
    "\000\002\001\001\000\012\030\131\031\271\032\136\035" +
    "\137\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\026\111\027\110\030" +
    "\106\052\113\053\105\001\001\000\002\001\001\000\004" +
    "\030\276\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\010\044\012\007\001\001\000\004" +
    "\022\303\001\001\000\014\026\111\027\110\030\106\052" +
    "\113\053\105\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\010\044\012\007\001\001\000\004\005\311\001" +
    "\001\000\002\001\001\000\010\012\047\020\051\021\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\012" +
    "\047\020\051\021\053\001\001\000\002\001\001\000\006" +
    "\055\330\056\327\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\324\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\333\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	if (s != null && s.value != null) 
		log.info(s.toString() + " " + s.value.toString());
	return s;

    }


	int printCallCount = 0;
	Logger log = Logger.getLogger(getClass());
   
   
    // slede redefinisani metodi za prijavu gresaka radi izmene teksta poruke
     
    public void report_fatal_error(String message, Object info) throws java.lang.Exception {
      done_parsing();
      report_error(message, info);
    }
  
    public void syntax_error(Symbol cur_token) {
        report_error("\nSintaksna greska", cur_token);
    }
  
    public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
        report_fatal_error("Fatalna greska, parsiranje se ne moze nastaviti", cur_token);
    }

    public void report_error(String message, Object info) {
    	StringBuilder msg = new StringBuilder(message); 
    	if (info instanceof Symbol)
            msg.append (" na liniji ").append(((Symbol)info).left);
        log.error(msg.toString());
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Mulop ::= MOD 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Mulop ::= DIV 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Mulop ::= MUL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Addop ::= MINUS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Addop ::= PLUS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // DotIdentExpr ::= LBRACKET Expr RBRACKET 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*DotIdentExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // DotIdentExpr ::= DOT IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*DotIdentExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // DotIdentExprList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*DotIdentExprList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // DotIdentExprList ::= DotIdentExprList DotIdentExpr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*DotIdentExprList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Designator ::= IDENT DotIdentExprList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Factor ::= Designator 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Factor ::= Designator LPAREN RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Factor ::= Designator LPAREN ActPars RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Factor ::= NEW Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Factor ::= NEW Type LBRACKET Expr RBRACKET 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Factor ::= BOOL_CONST 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Factor ::= LPAREN Expr RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Factor ::= CHAR_CONST 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Factor ::= NUM_CONST 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // MulopFactorList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*MulopFactorList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // MulopFactorList ::= MulopFactorList Mulop Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*MulopFactorList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Term ::= Factor MulopFactorList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // AddopTermList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*AddopTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // AddopTermList ::= AddopTermList Addop Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*AddopTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Expr ::= Term AddopTermList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Expr ::= MINUS Term AddopTermList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Relop ::= LESS_EQUAL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Relop ::= LESS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Relop ::= GREATER_EQUAL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Relop ::= GREATER 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Relop ::= NOT_EQUAL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Relop ::= EQUAL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // CondFact ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // CondFact ::= Expr Relop Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // CondFactList ::= CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*CondFactList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // CondFactList ::= CondFactList AND CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*CondFactList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // CondTerm ::= CondFactList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // CondTermList ::= CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*CondTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // CondTermList ::= CondTermList OR CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*CondTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Condition ::= CondTermList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ConditionParen ::= LPAREN error NT$4 RPAREN 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*ConditionParen*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // NT$4 ::= 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
 parser.log.debug("Uspesan oporavak od greske do ) pri obradi uslova IF naredbe."); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*NT$4*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ConditionParen ::= LPAREN Condition RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*ConditionParen*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Matched ::= IF ConditionParen Matched ELSE Matched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Matched ::= PRINT LPAREN Expr RPAREN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Matched ::= PRINT LPAREN Expr COMMA NUM_CONST RPAREN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Matched ::= READ LPAREN Designator RPAREN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Matched ::= DO Statement WHILE LPAREN Condition RPAREN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Matched ::= LBRACE StatementList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Matched ::= RETURN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Matched ::= RETURN Expr SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Matched ::= CONTINUE SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Matched ::= BREAK SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Matched ::= DesignatorStatement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Unmatched ::= IF ConditionParen Matched ELSE Unmatched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Unmatched ::= IF ConditionParen Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Statement ::= Unmatched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Statement ::= Matched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ExprList ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*ExprList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ExprList ::= ExprList COMMA Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*ExprList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ActPars ::= ExprList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // DesignatorStatement ::= Designator DEC SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // DesignatorStatement ::= Designator INC SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // DesignatorStatement ::= Designator LPAREN ActPars RPAREN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // DesignatorStatement ::= Designator LPAREN RPAREN SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // DesignatorStatement ::= Designator ASSIGN error SEMI_COMMA 
            {
              Object RESULT = null;
		 parser.log.debug("Uspesan oporavak od greske do ; pri dodeli vrednosti."); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // DesignatorStatement ::= Designator ASSIGN Expr SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // StatementList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // StatementList ::= StatementList Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // FormPar ::= Type IDENT LBRACKET RBRACKET 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*FormPar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // FormPar ::= Type IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*FormPar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // FormParsList ::= error NT$3 COMMA FormPar 
            {
              Object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*FormParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$3 ::= 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
parser.log.debug("Uspesno izvrsen oporavak od greske do , pri definiciji formalnog parametra!");
              CUP$MJParser$result = new java_cup.runtime.Symbol(46/*NT$3*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // FormParsList ::= FormPar 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*FormParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // FormParsList ::= FormParsList COMMA FormPar 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*FormParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // FormPars ::= LPAREN error NT$2 RPAREN 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // NT$2 ::= 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
parser.log.debug("Uspesno izvrsen oporavak od greske do ) pri definiciji formalnog parametra!");
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*NT$2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // FormPars ::= LPAREN FormParsList RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ReturnType ::= VOID 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ReturnType ::= Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // MethodDecl ::= ReturnType IDENT LPAREN RPAREN VarDeclList LBRACE StatementList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // MethodDecl ::= ReturnType IDENT FormPars VarDeclList LBRACE StatementList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // MethodDeclList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // MethodDeclList ::= MethodDeclList MethodDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // VarDeclList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // VarDeclList ::= VarDeclList VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ClassDecl ::= CLASS IDENT LBRACE VarDeclList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ClassDecl ::= CLASS IDENT LBRACE VarDeclList LBRACE MethodDeclList RBRACE RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ClassDecl ::= CLASS IDENT EXTENDS Type LBRACE VarDeclList LBRACE MethodDeclList RBRACE RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-9)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ClassDecl ::= CLASS IDENT EXTENDS Type LBRACE VarDeclList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Type ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Var ::= IDENT LBRACKET RBRACKET 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*Var*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Var ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*Var*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // VarList ::= error NT$1 COMMA Var 
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NT$1 ::= 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
parser.log.debug("Uspesno izvrsen oporavak od greske do , pri definiciji promenljive!");
              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*NT$1*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VarList ::= Var 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarList ::= VarList COMMA Var 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VarDecl ::= Type error NT$0 SEMI_COMMA 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$0 ::= 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
parser.log.debug("Uspesno izvrsen oporavak od greske do ; pri definiciji promenljive!");
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*NT$0*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VarDecl ::= Type VarList SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Value ::= BOOL_CONST 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*Value*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Value ::= CHAR_CONST 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*Value*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Value ::= NUM_CONST 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*Value*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ConstList ::= IDENT ASSIGN Value 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*ConstList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ConstList ::= ConstList COMMA IDENT ASSIGN Value 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*ConstList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ConstDecl ::= CONST Type ConstList SEMI_COMMA 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Decl ::= ClassDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Decl ::= VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Decl ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DeclList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*DeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // DeclList ::= DeclList Decl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*DeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROGRAM IDENT DeclList LBRACE MethodDeclList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

